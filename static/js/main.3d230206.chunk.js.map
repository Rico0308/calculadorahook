{"version":3,"sources":["hooks/useCalc.js","styles/styles.js","components/Calculator.js","App.js","index.js"],"names":["useCalc","numbers","operators","ids","7","8","9","4","5","6","1","2","3","0","useState","lastPressed","undefined","prevOpe","calc","operation","state","setState","handleClick","e","innerText","target","evaluated","eval","splitted","split","last","slice","includes","lastNumberId","reverse","findIndex","char","length","Container","styled","div","Display","DisplayResult","small","Button","button","NumberContainer","OperatorContainer","Calculator","props","id","className","onClick","map","number","operator","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d230206.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst useCalc = () => {\r\n\r\n    const numbers = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0];\r\n    const operators = ['/', '*', '-', '+'];\r\n    const ids = {\r\n        7: 'seven',\r\n        8: 'eight',\r\n        9: 'nine',\r\n        4: 'four',\r\n        5: 'five',\r\n        6: 'six',\r\n        1: 'one',\r\n        2: 'two',\r\n        3: 'three',\r\n        0: 'zero',\r\n        '/': 'divide',\r\n        '*': 'multiply',\r\n        '-': 'subtract',\r\n        '+': 'add'\r\n    }\r\n\r\n    const [state, setState] = useState({\r\n        lastPressed: undefined,\r\n        prevOpe: '0',\r\n        calc: '0',\r\n        operation: undefined\r\n    });\r\n\r\n    const { lastPressed, calc, prevOpe } = state;\r\n\r\n    const handleClick = (e) => {\r\n        const { innerText } = e.target;\r\n\r\n        switch (innerText) {\r\n            case 'AC': {\r\n                setState({\r\n                    calc: '0',\r\n                    prevOpe: '0'\r\n                });\r\n                break;\r\n            }\r\n\r\n            case '=': {\r\n                const evaluated = eval(calc);\r\n                setState({\r\n                    calc: evaluated,\r\n                    prevOpe: prevOpe + innerText + evaluated\r\n                });\r\n                break;\r\n            }\r\n\r\n            case '.': {\r\n                const splitted = calc.split(/[\\+\\-\\*\\/]/);\r\n                const last = splitted.slice(-1)[0];\r\n\r\n                if(!last.includes('.')){\r\n                    setState({\r\n                        calc: calc + '.'\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n\r\n            default: {\r\n                let e = undefined;\r\n                //Validar cuando se introducen varios operadores\r\n                if (operators.includes(innerText)) {\r\n                    if (operators.includes(lastPressed) && innerText !== '-') {\r\n                        const lastNumberId = calc.split('').reverse().findIndex(char => char !== ' ' && numbers.includes(+char));\r\n                        e = calc.slice(0, calc.length - lastNumberId) + `${innerText}`;\r\n                    } else {\r\n                        e = `${calc} ${innerText}`;\r\n                    }\r\n                } else {\r\n                    e = (calc === '0') ? innerText : (calc + innerText);\r\n                }\r\n                setState({\r\n                    calc: e,\r\n                    prevOpe: e,\r\n                    lastPressed: innerText\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return [\r\n        state,\r\n        numbers,\r\n        operators,\r\n        ids,\r\n        handleClick\r\n    ]\r\n}\r\n\r\nexport default useCalc\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    background-color: #caf7e3;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n    height: 380px;\r\n    width: 250px;\r\n`;\r\n\r\nconst Display = styled.div`\r\n    background-color: #f8eded;\r\n    font-size: 30px;\r\n    position: relative;\r\n    padding: 20px 10px;\r\n    text-align: right;\r\n    height: 70px;\r\n    width: 100%;\r\n`;\r\n\r\nconst DisplayResult = styled.small`\r\n    color: red;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 5px;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    font-size: 25px;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst NumberContainer = styled.div`\r\n    width: 75%;\r\n    height: 81%;\r\n`;\r\n\r\nconst OperatorContainer = styled.div`\r\n    width: 25%;\r\n`;\r\n\r\nexport { Container, Display, DisplayResult, NumberContainer, OperatorContainer,  Button};","import React from 'react'\r\nimport { Container, Display, DisplayResult, NumberContainer, OperatorContainer, Button } from '../styles/styles'\r\nimport useCalc from '../hooks/useCalc.js'\r\n\r\nexport function Calculator(props) {\r\n\r\n    const [state, numbers, operators, ids, handleClick] = useCalc();\r\n\r\n    const { calc, prevOpe } = state;\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                \r\n                <Display id=\"display\">\r\n                    <DisplayResult>{prevOpe}</DisplayResult>\r\n                    {calc}\r\n                </Display>\r\n                <NumberContainer>\r\n                    <Button className=\"button-ac button-horizontal\" id=\"clear\" onClick={handleClick}>AC</Button>\r\n                    {\r\n                        numbers.map(number => (\r\n                            <Button\r\n                                className={`button-number ${number === 0 && 'button-horizontal'}`}\r\n                                key={number}\r\n                                onClick={handleClick}\r\n                                id={ids[number]}\r\n                            >\r\n                                { number}\r\n                            </Button>\r\n                        ))\r\n                    }\r\n                    <Button className=\"button-number\" onClick={handleClick} id=\"decimal\">.</Button>\r\n                </NumberContainer>\r\n                <OperatorContainer>\r\n                    {\r\n                        operators.map(operator => (\r\n                            <Button\r\n                                className=\"button-operator\"\r\n                                key={operator}\r\n                                onClick={handleClick}\r\n                                id={ids[operator]}\r\n                            >\r\n                                {operator}\r\n                            </Button>\r\n                        ))\r\n                    }\r\n                    <Button\r\n                        className=\"button-operator\"\r\n                        onClick={handleClick}\r\n                        id=\"equals\"\r\n                    >\r\n                        =\r\n                    </Button>\r\n                </OperatorContainer>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Calculator } from './components/Calculator'\nimport Normalize from 'react-normalize'\nimport './styles/globalStyle.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Normalize />\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}